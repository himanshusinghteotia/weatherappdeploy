{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/weather.service.ts","webpack:///./src/app/single-day/single-day.component.css","webpack:///./src/app/single-day/single-day.component.html","webpack:///./src/app/single-day/single-day.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"#smtxtbox{\\r\\n    width:45%;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.gray{\\r\\n    color:#A9A9A9;\\r\\n}\\r\\n.bigImg{\\r\\n    height:144px;\\r\\n}\\r\\n.tempFont{\\r\\n    font-size:45px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\n.font_style{\\r\\n    font-family: Courier New, Courier, monospace;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxTQUFTO0lBQ1QsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxjQUFjO0lBQ2QsNENBQTRDO0FBQ2hEO0FBQ0E7SUFDSSw0Q0FBNEM7QUFDaEQiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzbXR4dGJveHtcclxuICAgIHdpZHRoOjQ1JTtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuLmdyYXl7XHJcbiAgICBjb2xvcjojQTlBOUE5O1xyXG59XHJcbi5iaWdJbWd7XHJcbiAgICBoZWlnaHQ6MTQ0cHg7XHJcbn1cclxuLnRlbXBGb250e1xyXG4gICAgZm9udC1zaXplOjQ1cHg7XHJcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxufVxyXG4uZm9udF9zdHlsZXtcclxuICAgIGZvbnQtZmFtaWx5OiBDb3VyaWVyIE5ldywgQ291cmllciwgbW9ub3NwYWNlO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <input id=\\\"smtxtbox\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"City Name(London,Mumbai etc)\\\" [(ngModel)]='cityInput'>&nbsp;\\n    <input id=\\\"smtxtbox\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Country Code(uk,in etc)\\\" [(ngModel)]='codeInput'>\\n    <button class=\\\"btn-info\\\" type=\\\"text\\\" (click)='getWeatherData()'>Forcast Weather</button>\\n  </div>\\n</div>\\n<br>\\n<hr>\\n<div *ngIf=\\\"weather\\\" class=\\\"container\\\">\\n  <h1>{{weather.city.name}}</h1>\\n  <h6>{{weather.city.country}}</h6>\\n  <span class=\\\"font_style\\\">{{weather.list[\\\"0\\\"].dt_txt | date:'fullDate'}}</span><br>\\n  <span class=\\\"font_style\\\">{{weather.list[\\\"0\\\"].weather[\\\"0\\\"].description | uppercase}}</span><br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n      <img class=\\\"bigImg\\\" src='https://openweathermap.org/img/w/{{weather.list[\\\"0\\\"].weather[\\\"0\\\"].icon}}.png' />\\n      <span class=\\\"tempFont\\\">{{weather.list[\\\"0\\\"].main.temp}}</span>°C\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <span class=\\\"gray font_style\\\">Humidity: </span><span>{{weather.list[\\\"0\\\"].main.humidity}}%</span><br>\\n      <span class=\\\"gray font_style\\\">Pressure: </span><span>{{weather.list[\\\"0\\\"].main.pressure}} hPa</span><br>\\n      <span class=\\\"gray font_style\\\">Wind Speed: </span><span>{{weather.list[\\\"0\\\"].wind.speed}} m/s</span><br>\\n      <span class=\\\"gray font_style\\\">Wind Degree: </span><span>{{weather.list[\\\"0\\\"].wind.deg}}°</span><br>\\n    </div>\\n    <div *ngIf=\\\"!weather\\\">\\n      Loading...\\n    </div>\\n  </div>\\n  <hr>\\n</div>\\n<div class=\\\"container\\\">\\n  <app-single-day *ngFor=\\\"let wthr of weatherList\\\" [weather]=wthr></app-single-day>\\n</div>\"","import { Component } from '@angular/core';\nimport { WeatherService } from './services/weather.service'\nimport { OnInit } from \"@angular/core\";\nimport swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n\n  cityInput: string = '';\n  codeInput: string = '';\n  weather: any;\n  weatherList: any = [];\n\n  constructor(private weatherService: WeatherService) { }\n  ngOnInit() {\n  }\n  /*\n  * filter the received weather data by selecting one per day.\n  * (api return weather forcast for 5 days with the intervals of 3 hours\n  * and requirment was one forcast for one day)\n  */\n  sendFilterData() {\n    let i: number = 0;\n    let index: number;\n    this.weatherList.splice(0, this.weatherList.length);\n    for (index = 0; index < 5; index++) {\n      this.weatherList.push(this.weather.list[i]);\n      i = i + 8;\n    }\n  }\n  /*\n  * Takes city name and country code from the user and call the getWeatherData service to call api\n  */\n  getWeatherData() {\n    //check if user have entered the required data or notf\n    if (this.cityInput == \"\" || this.codeInput == \"\") {\n      swal.fire(\n        {\n          title: 'City Name & Country Code',\n          text: `can't be empty`,\n        });\n    }\n    else {\n      this.weatherService.getWeather(this.cityInput, this.codeInput).subscribe((result) => {\n        this.weather = result;\n        this.sendFilterData();\n      }),\n        (error) => console.log(error)\n    }\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http'\nimport { WeatherService } from './services/weather.service'\nimport { FormsModule } from '@angular/forms';\nimport { SingleDayComponent } from './single-day/single-day.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SingleDayComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [WeatherService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class WeatherService {\n\n  apiKey: string = 'ba78ea0a78bd4d8b5b12508f1232bc69';\n  url: string;\n\n  constructor(private http: HttpClient) {\n    this.url = 'https://api.openweathermap.org/data/2.5/forecast?q=';\n  }\n\n  /*\n  * made get request to the api for 5 days weather forcast\n  */\n  getWeather(city, code) {\n    return this.http.get(this.url + city + ',' + code + '&units=metric' + '&APPID=' + this.apiKey);\n  }\n}\n","module.exports = \".gray{\\r\\n    color:#A9A9A9;\\r\\n}\\r\\n.font_style{\\r\\n    font-family: Courier New, Courier, monospace;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2luZ2xlLWRheS9zaW5nbGUtZGF5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSw0Q0FBNEM7QUFDaEQiLCJmaWxlIjoic3JjL2FwcC9zaW5nbGUtZGF5L3NpbmdsZS1kYXkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ncmF5e1xyXG4gICAgY29sb3I6I0E5QTlBOTtcclxufVxyXG4uZm9udF9zdHlsZXtcclxuICAgIGZvbnQtZmFtaWx5OiBDb3VyaWVyIE5ldywgQ291cmllciwgbW9ub3NwYWNlO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"row font_style\\\">\\n  <div class=\\\"col-2\\\">\\n  </div>\\n  <span class=\\\"col-2\\\"><b>{{weather.dt_txt | date:'EEEE'}}</b></span>\\n  <img class=\\\"col-1 d-none d-lg-block d-print-block\\\" src='https://openweathermap.org/img/w/{{weather.weather[\\\"0\\\"].icon}}.png'\\n  />\\n  <div class=\\\"col-3\\\">\\n    <span>Min temp: {{weather.main.temp_min}}°C</span><br>\\n    <span class=\\\"gray\\\">Max temp: {{weather.main.temp_max}}°C</span>\\n  </div>\\n  <span class=\\\"col-2\\\"><span class=\\\"gray\\\">Humidity: </span>{{weather.main.humidity}}%</span>\\n</div>\\n<br>\\n<hr>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-single-day',\n  templateUrl: './single-day.component.html',\n  styleUrls: ['./single-day.component.css']\n})\nexport class SingleDayComponent implements OnInit {\n  @Input() weather;\n  constructor() { }\n  ngOnInit() {\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}